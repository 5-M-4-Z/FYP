import subprocess
import os
import sys

def run_hfss_script_batch(hfss_exe_path, script_file_path):
    """
    Launches ANSYS HFSS to run a Python script, save results, and exit.
    Works like the MATLAB version, but in pure Python.
    """

    # --- Check if paths exist ---
    if not os.path.exists(hfss_exe_path):
        raise FileNotFoundError(f"HFSS executable not found: {hfss_exe_path}")
    if not os.path.exists(script_file_path):
        raise FileNotFoundError(f"Script file not found: {script_file_path}")

    # --- Wrap in quotes (for paths with spaces) ---
    hfss_exe_path = f'"{hfss_exe_path}"'
    script_file_path = f'"{script_file_path}"'

    # --- Command to run HFSS and execute the Python script ---
    run_script_flag = "-RunScriptAndExit"
    cmd = f'{hfss_exe_path} {run_script_flag} {script_file_path}'

    print("Running HFSS with command:")
    print(cmd)

    # --- Execute command ---
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        if result.returncode != 0:
            print(result.stdout)
            print(result.stderr)
            raise RuntimeError(f"HFSS execution failed with code {result.returncode}")
        else:
            print("HFSS script completed successfully.")
    except Exception as e:
        print(f"Error while running HFSS: {e}")
        sys.exit(1)


# Example usage:
hfss_exe_path = r"D:\\Software\\Ansys\\AnsysEM\\v241\\Win64\\ansysedtsv.exe"
script_file_path = r"D:\\UNI\\FYP\\Py files\\lol.py"


print("%%%%% Exploiting ANSYS HFSS feature of running a python file %%%%%")
run_hfss_script_batch(hfss_exe_path, script_file_path)
print("%%%%% End of Exploiting ANSYS HFSS feature of running a python file %%%%%")
print("All truncation sweep files generated.")
